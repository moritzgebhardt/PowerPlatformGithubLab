name: Manual Release with Production Selection

on:
  workflow_dispatch:
    inputs:
      production_target:
        description: 'WÃ¤hle die Produktionsumgebung'
        required: true
        default: 'INT'
        type: choice
        options:
          - INT
          - PROD
      solution_name:
        description: 'Solution Name'
        required: true
        default: GitHubLabSolution
env:
  BUILD_ENVIRONMENT_URL: https://org9e7ccea6.crm4.dynamics.com
  INT_ENVIRONMENT_URL: https://org0e0972b3.crm4.dynamics.com
  PROD_ENVIRONMENT_URL: https://org0e0972b3.crm4.dynamics.com
  CLIENT_ID_TEST: 0b249eea-86dd-4163-9c07-d47009a5a4f1
  TENANT_ID_TEST: 57cc5cf9-43af-426b-bb89-51f07148ddbe
  CLIENT_ID_PROD: 0b249eea-86dd-4163-9c07-d47009a5a4f1
  TENANT_ID_PROD: 57cc5cf9-43af-426b-bb89-51f07148ddbe

jobs:
  convert-to-int_prod:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Install Power Platform CLI
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: solutions/${{ inputs.solution_name }}
        solution-file: out/solutions/${{ inputs.solution_name }}.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build environment
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID_TEST }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID_TEST }}
        solution-file: out/solutions/${{ inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Get current solution version from build environment
      id: get_version
      run: |
        $output = pac solution list --environment ${{ env.BUILD_ENVIRONMENT_URL }}
        $versionLine = ($output -split "\n") | Where-Object { $_ -match "${{ inputs.solution_name }}" }
        $currentVersion = ($versionLine -split "\s+")[3]
        Write-Host "Aktuelle Version: $currentVersion"
        $parts = $currentVersion -split "\."
        $parts[3] = [int]$parts[3] + 1
        $newVersion = "$($parts[0]).$($parts[1]).$($parts[2]).$($parts[3])"
        echo "NEW_VERSION=$newVersion" >> $env:GITHUB_ENV

    - name: Set new solution version in build environment
      uses: microsoft/powerplatform-actions/set-online-solution-version@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID_TEST }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID_TEST }}
        name: ${{ inputs.solution_name }}
        version: ${{ env.NEW_VERSION }}

    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID_TEST }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID_TEST }}
        solution-name: ${{ inputs.solution_name }}
        managed: true
        solution-output-file: out/ship/${{ inputs.solution_name }}_managed.zip

    - name: Upload managed solution to GitHub artifact store
      uses: actions/upload-artifact@v4
      with:
        name: managedSolutions
        path: out/ship/

  release-to-target:
    needs: [ convert-to-int_prod ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Install Power Platform CLI
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Download managed solution from GitHub artifact store
      uses: actions/download-artifact@v4
      with:
        name: managedSolutions
        path: out/release

    - name: Import solution to INT environment
      if: ${{ inputs.production_target == 'INT' }}
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ env.INT_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID_PROD }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID_PROD }}
        solution-file: out/release/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true

    - name: Import solution to PROD environment
      if: ${{ inputs.production_target == 'PROD' }}
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{ env.PROD_ENVIRONMENT_URL }}
        app-id: ${{ env.CLIENT_ID_PROD }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ env.TENANT_ID_PROD }}
        solution-file: out/release/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
